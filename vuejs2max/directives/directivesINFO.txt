Five hooks for directives

binding vnode and oldVnode should be considered read only

1. bind (el, binding, vnode)   Fires once directive is attached

2. inserted(el, binding, vnode)   Fires when inserted into Parent Node


3. update(el, binding, vnode, oldVnode)  Once component is updated (without children)


4. componentUpdated (el, binding, vnode, oldVnode)   Once component is updated (with children)


5. unbind(el, binding, vnode)  Once directive is removed

will use bind and update most all of the time


---

can be defined in main.js
===================================
import Vue from 'vue'
import App from './App.vue'


Vue.directive('gHlite', {
  bind(el, binding, vnode) {
    //el.style.backgroundColor = 'green';
    //el.style.backgroundColor = binding.value;
    let delay = 0;
    if(binding.modifiers['delayed']) {
      delay = 5000;
    }

    setTimeout(()=> {
      if(binding.arg == 'background')
      {
        el.style.backgroundColor = binding.value;
      } else
      {
        el.style.color = binding.value;
      }
    } , delay)
  }
});

new Vue({
  el: '#app',
  render: h => h(App)
})
===================================
or

